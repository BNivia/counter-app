{"ast":null,"code":"var _jsxFileName = \"/home/naomiolivia/Desktop/React Learning/Mosh/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: this.props.value\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        value: this.state.value + 1\n      });\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //used to replace divs that are only parents\n      _jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.getBadgeClasses(),\n          children: this.formatCount()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleIncrement,\n          className: \"btn btn-secondary btn-sm\",\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), \"button.btn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n  formatCount() {\n    const {\n      value\n    } = this.state;\n    return value === 0 ? \"Zero\" : value;\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n}\n\nexport default Counter; //notes\n//Conditional Rendering\n// renderTags() {\n//         if (this.state.tags.length === 0) {\n//             return <p>There are no tags!</p>;\n//         }\n//         return <ul>{ this.state.tags.map(tag => <li key={tag}>{ tag }</li>) }</ul>\n//     }\n// { this.renderTags() }\n//Binding Event Handlers (alternate approach)\n// constructor(){\n//     super();\n//     this.handleIncrement = this.handleIncrement.bind(this);\n// }","map":{"version":3,"sources":["/home/naomiolivia/Desktop/React Learning/Mosh/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","value","props","handleIncrement","setState","render","getBadgeClasses","formatCount","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AADZ,KADsB;;AAAA,SAM9BE,eAN8B,GAMZ,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,KAR6B;AAAA;;AAU9BI,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA,cAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAM,UAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA,oBAA0C,KAAKC,WAAL;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,OAAO,EAAE,KAAKJ,eADhB;AAEE,UAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAcD;;AAEDI,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEN,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AAEDK,EAAAA,eAAe,GAAG;AAChB,QAAIE,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKR,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOO,OAAP;AACD;;AApC6B;;AAuChC,eAAeT,OAAf,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    value: this.props.value,\n  };\n\n  //binding event handlers\n  handleIncrement = () => {\n    this.setState({ value: this.state.value + 1 });\n  };\n\n  render() {\n    return (\n      //used to replace divs that are only parents\n      <React.Fragment>\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          onClick={this.handleIncrement}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n        <br></br>\n        button.btn\n      </React.Fragment>\n    );\n  }\n\n  formatCount() {\n    const { value } = this.state;\n    return value === 0 ? \"Zero\" : value;\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n}\n\nexport default Counter;\n\n//notes\n\n//Conditional Rendering\n\n// renderTags() {\n//         if (this.state.tags.length === 0) {\n//             return <p>There are no tags!</p>;\n//         }\n//         return <ul>{ this.state.tags.map(tag => <li key={tag}>{ tag }</li>) }</ul>\n//     }\n\n// { this.renderTags() }\n\n//Binding Event Handlers (alternate approach)\n\n// constructor(){\n//     super();\n//     this.handleIncrement = this.handleIncrement.bind(this);\n// }\n"]},"metadata":{},"sourceType":"module"}