{"ast":null,"code":"var _jsxFileName = \"/home/naomiolivia/Desktop/React Learning/Mosh/counter-app/src/components/counters.jsx\";\nimport React, { Component } from 'react';\nimport Counter from './counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 5\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }, {\n        id: 5,\n        value: 0\n      }]\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleIncrement = counter => {\n      console.log(counter);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClik: this.handleReset,\n        className: \"btn-primary btn-sm m-2\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), this.state.counters.map(counter => /*#__PURE__*/_jsxDEV(Counter, {\n        onDelete: this.handleDelete,\n        counter: counter\n      }, counter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/home/naomiolivia/Desktop/React Learning/Mosh/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleDelete","counterId","filter","c","setState","handleReset","map","handleIncrement","counter","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACJC,MAAAA,QAAQ,EAAE,CACN;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAC;AAAd,OADM,EAEN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAC;AAAd,OAFM,EAGN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAC;AAAd,OAHM,EAIN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAC;AAAd,OAJM,EAKN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAC;AAAd,OALM;AADN,KADqB;;AAAA,SAW7BC,YAX6B,GAWbC,SAAD,IAAe;AAC1B,YAAMJ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASG,SAAzC,CAAjB;AACA,WAAKG,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACH,KAd4B;;AAAA,SAgB7BQ,WAhB6B,GAgBf,MAAM;AAChB,YAAMR,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwBH,CAAC,IAAI;AAC1CA,QAAAA,CAAC,CAACJ,KAAF,GAAU,CAAV;AACA,eAAOI,CAAP;AACH,OAHgB,CAAjB;AAIA,WAAKC,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AACH,KAtB4B;;AAAA,SAwB7BU,eAxB6B,GAwBVC,OAAD,IAAa;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,KA1B4B;AAAA;;AA4B7BG,EAAAA,MAAM,GAAG;AACL,wBACA;AAAA,8BACI;AAAQ,QAAA,MAAM,EAAE,KAAKN,WAArB;AAAkC,QAAA,SAAS,EAAC,wBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwBE,OAAO,iBAC3B,QAAC,OAAD;AAEA,QAAA,QAAQ,EAAE,KAAKR,YAFf;AAGA,QAAA,OAAO,EAAEQ;AAHT,SACKA,OAAO,CAACV,EADb;AAAA;AAAA;AAAA;AAAA,cADJ,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAYH;;AAzC4B;;AA4CjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Counter from './counter';\n\nclass Counters extends Component {\n    state = { \n        counters: [\n            {id: 1, value:5},\n            {id: 2, value:0},\n            {id: 3, value:0},\n            {id: 4, value:0},\n            {id: 5, value:0}\n        ]\n     };\n\n    handleDelete = (counterId) => {\n        const counters = this.state.counters.filter(c => c.id !== counterId);\n        this.setState({ counters });\n    }\n\n    handleReset = () => {\n        const counters = this.state.counters.map(c => {\n            c.value = 0;\n            return c;\n        });\n        this.setState({counters});\n    }\n\n    handleIncrement = (counter) => {\n        console.log(counter);\n    }\n\n    render() { \n        return ( \n        <div>\n            <button onClik={this.handleReset} className=\"btn-primary btn-sm m-2\">Reset</button>\n           {this.state.counters.map(counter => \n                <Counter \n                key={counter.id} \n                onDelete={this.handleDelete} \n                counter={counter}\n                />\n            )}\n        </div> \n        );\n    }\n}\n \nexport default Counters;"]},"metadata":{},"sourceType":"module"}