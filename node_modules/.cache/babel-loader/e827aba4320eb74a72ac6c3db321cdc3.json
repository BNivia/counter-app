{"ast":null,"code":"var _jsxFileName = \"/home/naomiolivia/Desktop/React Learning/Mosh/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  render() {\n    return (\n      /*#__PURE__*/\n      //used to replace divs that are only parents\n      _jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.getBadgeClasses(),\n          children: this.formatCount()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onIncrement(this.props.counter),\n          className: \"btn btn-secondary btn-sm\",\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.onDelete(this.props.counter.id),\n          className: \"btn btn-danger btn-sm m-2\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n  formatCount() {\n    const {\n      value\n    } = this.props.counter;\n    return value === 0 ? 'Zero' : value;\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n}\n\nexport default Counter; //notes\n//Conditional Rendering \n// renderTags() {\n//         if (this.state.tags.length === 0) {\n//             return <p>There are no tags!</p>;\n//         }\n//         return <ul>{ this.state.tags.map(tag => <li key={tag}>{ tag }</li>) }</ul>\n//     }\n// { this.renderTags() }\n//Binding Event Handlers (alternate approach)\n// constructor(){\n//     super();\n//     this.handleIncrement = this.handleIncrement.bind(this);\n// }","map":{"version":3,"sources":["/home/naomiolivia/Desktop/React Learning/Mosh/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","render","getBadgeClasses","formatCount","props","onIncrement","counter","onDelete","id","value","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,MAAM,GAAG;AACL;AAAA;AACI;AACA,cAAC,KAAD,CAAO,QAAP;AAAA,gCACI;AAAM,UAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA,oBAA0C,KAAKC,WAAL;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,OAAlC,CADnB;AAEI,UAAA,SAAS,EAAC,0BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWG,QAAX,CAAoB,KAAKH,KAAL,CAAWE,OAAX,CAAmBE,EAAvC,CAAvB;AAAmE,UAAA,SAAS,EAAC,2BAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAaH;;AAEDL,EAAAA,WAAW,GAAE;AACT,UAAM;AAAEM,MAAAA;AAAF,QAAY,KAAKL,KAAL,CAAWE,OAA7B;AACA,WAAOG,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AAEDP,EAAAA,eAAe,GAAG;AACd,QAAIQ,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKN,KAAL,CAAWE,OAAX,CAAmBG,KAAnB,KAA6B,CAA7B,GAAiC,SAAjC,GAA6C,SAAxD;AACA,WAAOC,OAAP;AACH;;AA1B2B;;AA8BhC,eAAeV,OAAf,C,CAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACI;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    render() { \n        return (\n            //used to replace divs that are only parents\n            <React.Fragment>\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button \n                    onClick={() => this.props.onIncrement(this.props.counter)} \n                    className=\"btn btn-secondary btn-sm\">\n                    Increment\n                </button>\n                <button onClick={() => this.props.onDelete(this.props.counter.id)} className=\"btn btn-danger btn-sm m-2\">Delete</button>\n                <br></br>\n            </React.Fragment>\n        );\n    }\n\n    formatCount(){\n        const { value } = this.props.counter;\n        return value === 0 ? 'Zero' : value;\n    }\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n}\n \nexport default Counter;\n\n\n\n//notes\n\n//Conditional Rendering \n\n// renderTags() {\n//         if (this.state.tags.length === 0) {\n//             return <p>There are no tags!</p>;\n//         }\n//         return <ul>{ this.state.tags.map(tag => <li key={tag}>{ tag }</li>) }</ul>\n//     }\n\n// { this.renderTags() }\n\n//Binding Event Handlers (alternate approach)\n\n// constructor(){\n    //     super();\n    //     this.handleIncrement = this.handleIncrement.bind(this);\n    // }"]},"metadata":{},"sourceType":"module"}