{"ast":null,"code":"var _jsxFileName = \"/home/naomiolivia/Desktop/React Learning/Mosh/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: this.props.value\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //used to replace divs that are only parents\n      _jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.getBadgeClasses(),\n          children: this.formatCount()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleIncrement,\n          className: \"btn btn-secondary btn-sm\",\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n}\n\nexport default Counter; //notes\n//Conditional Rendering \n// renderTags() {\n//         if (this.state.tags.length === 0) {\n//             return <p>There are no tags!</p>;\n//         }\n//         return <ul>{ this.state.tags.map(tag => <li key={tag}>{ tag }</li>) }</ul>\n//     }\n// { this.renderTags() }\n//Binding Event Handlers (alternate approach)\n// constructor(){\n//     super();\n//     this.handleIncrement = this.handleIncrement.bind(this);\n// }","map":{"version":3,"sources":["/home/naomiolivia/Desktop/React Learning/Mosh/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","props","value","handleIncrement","setState","render","getBadgeClasses","formatCount","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC;AADd,KADoB;;AAAA,SAM5BC,eAN4B,GAMV,MAAM;AACpB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACH,KAR2B;AAAA;;AAU5BK,EAAAA,MAAM,GAAG;AACL;AAAA;AACI;AACA,cAAC,KAAD,CAAO,QAAP;AAAA,gCACI;AAAM,UAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA,oBAA0C,KAAKC,WAAL;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,OAAO,EAAE,KAAKJ,eADlB;AAEI,UAAA,SAAS,EAAC,0BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMa;AAAA;AAAA;AAAA;AAAA,gBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAWH;;AAEDI,EAAAA,WAAW,GAAE;AACT,UAAM;AAAEP,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AAEDM,EAAAA,eAAe,GAAG;AACd,QAAIE,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKT,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOQ,OAAP;AACH;;AAjC2B;;AAqChC,eAAeV,OAAf,C,CAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACI;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    state = {\n        count: this.props.value\n    };\n\n    //binding event handlers\n    handleIncrement = () => {\n        this.setState({ count: this.state.count + 1});\n    }\n\n    render() { \n        return (\n            //used to replace divs that are only parents\n            <React.Fragment>\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button \n                    onClick={this.handleIncrement} \n                    className=\"btn btn-secondary btn-sm\">\n                    Increment\n                </button><br></br>\n            </React.Fragment>\n        );\n    }\n\n    formatCount(){\n        const { count } = this.state;\n        return count === 0 ? 'Zero' : count;\n    }\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += this.state.count === 0 ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n}\n \nexport default Counter;\n\n\n\n//notes\n\n//Conditional Rendering \n\n// renderTags() {\n//         if (this.state.tags.length === 0) {\n//             return <p>There are no tags!</p>;\n//         }\n//         return <ul>{ this.state.tags.map(tag => <li key={tag}>{ tag }</li>) }</ul>\n//     }\n\n// { this.renderTags() }\n\n//Binding Event Handlers (alternate approach)\n\n// constructor(){\n    //     super();\n    //     this.handleIncrement = this.handleIncrement.bind(this);\n    // }"]},"metadata":{},"sourceType":"module"}